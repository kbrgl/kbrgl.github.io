{"version":3,"sources":["webpack:///./src/pages/design.js"],"names":["DesignQuery","DesignPage","nodes","col1","col2","data","size","style","marginTop","marginBottom","allDesignJson","map","node","className","styles","image","fluid","media","childImageSharp","imageTitle","title","imageDesc","description","forEach","i","push"],"mappings":"2FAAA,8IA8BA,IAoCaA,EAAW,aAkBTC,UAtDI,SAAC,GAAD,IApBJC,EACPC,EACAC,EAkBcC,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,KAAK,OACX,wBAAIC,MAAO,CAAEC,UAAW,OAAQC,aAAc,SAA9C,qBAGA,uBAAGF,MAAO,CAAEE,aAAc,SAA1B,mDAKJ,kBAAC,IAAD,MAhCWP,EAkCPG,EAAKK,cAAcR,MAAMS,KAAI,SAAAC,GAAI,OAC/B,iCACE,kBAAC,IAAD,CACEC,UAAWC,IAAOC,MAClBC,MAAOJ,EAAKK,MAAMC,gBAAgBF,QAEpC,uBAAGH,UAAWC,IAAOK,YAAaP,EAAKQ,OACvC,uBAAGP,UAAWC,IAAOO,WAAYT,EAAKU,iBAxC1CnB,EAAO,GACPC,EAAO,GAEbF,EAAMqB,SAAQ,SAACX,EAAMY,GACfA,EAAI,GAAM,EACZrB,EAAKsB,KAAKb,GAEVR,EAAKqB,KAAKb,MAKZ,oCACE,kBAAC,IAAD,CAAQN,KAAK,OAAOH,GACpB,kBAAC,IAAD,CAAQG,KAAK,OAAOF","file":"component---src-pages-design-js-2d05d695dab9b5f79d55.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { Row, Column } from '../components/grid'\nimport Layout from '../components/layout'\n\nimport styles from './design.module.css'\n\nfunction split(nodes) {\n  const col1 = []\n  const col2 = []\n\n  nodes.forEach((node, i) => {\n    if (i % 2 === 0) {\n      col1.push(node)\n    } else {\n      col2.push(node)\n    }\n  })\n\n  return (\n    <>\n      <Column size=\"six\">{col1}</Column>\n      <Column size=\"six\">{col2}</Column>\n    </>\n  )\n}\n\nconst DesignPage = ({ data }) => (\n  <Layout>\n    <Row>\n      <Column size=\"six\">\n        <h1 style={{ marginTop: '5rem', marginBottom: '1rem' }}>\n          Design+Typography\n        </h1>\n        <p style={{ marginBottom: '4rem' }}>\n          A showcase of select works from my portfolio.\n        </p>\n      </Column>\n    </Row>\n    <Row>\n      {split(\n        data.allDesignJson.nodes.map(node => (\n          <section>\n            <Image\n              className={styles.image}\n              fluid={node.media.childImageSharp.fluid}\n            />\n            <p className={styles.imageTitle}>{node.title}</p>\n            <p className={styles.imageDesc}>{node.description}</p>\n          </section>\n        ))\n      )}\n    </Row>\n  </Layout>\n)\nDesignPage.propTypes = {\n  data: PropTypes.shape({\n    allDesignJson: PropTypes.shape({\n      nodes: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }).isRequired,\n}\n\nexport const DesignQuery = graphql`\n  query DesignQuery {\n    allDesignJson {\n      nodes {\n        title\n        description\n        media {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default DesignPage\n"],"sourceRoot":""}